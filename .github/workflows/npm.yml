name: Publish to NPM
on:
  release:
    types: [published]

  push:
    branches:
      - feature/*
    paths:
      - packages/abtesting/**
      - .github/workflows/npm.yml

  # Allow manually trigger of the jobs
  workflow_dispatch:
    inputs:
      release-type: 
        type: choice
        description: Release type
        options: [patch, minor, major, prepatch, preminor, premajor, prerelease]

env:
  WORKING_DIRECTORY: packages/abtesting
  PACKAGES_DIRECTORY: packages

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Setup .npmrc file to publish to GitHub Packages
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          
      # Bump package version
      # Use tag latest
      - name: Bump release version
        working-directory: ${{ env.WORKING_DIRECTORY }}
        if: github.event_name == 'workflow_dispatch' && startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version
        working-directory: ${{ env.WORKING_DIRECTORY }}
        if: github.event_name == 'workflow_dispatch' || startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version from branch trigger
        working-directory: ${{ env.WORKING_DIRECTORY }}
        if: github.event_name != 'workflow_dispatch'
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: prepatch

      - name: Commit package.json changes and create tag
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git add "package.json"
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}

      - name: Install @angular/cli
        working-directory: ${{ env.PACKAGES_DIRECTORY }}
        run: |
          npm install -g @angular/cli
          npm install --save-dev @angular-devkit/build-angular
      - name: Install package dependencies, build & pack ðŸ”§
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          npm install --legacy-peer-deps
          npm run build
          npm pack --pack-destination="./dist"
      - name: Publish package to NPM ðŸ“¦
        working-directory: ${{ env.WORKING_DIRECTORY }}/dist
        run: npm publish *.tgz --provenance --access public --tag ${{ env.RELEASE_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Push repository changes
      - name: Push changes to repository
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin && git push --tags
